!function(root,factory){var i,resolved=[],required=["require","exports","module","angular"],len=required.length;if("function"==typeof define&&define.amd)define("ngperms",["require","exports","module","angular"],factory);else if("object"==typeof exports){for(i=0;i<len;i+=1)resolved.push(require(required[i]));module.exports=factory.apply({},resolved)}else{for(i=0;i<len;i+=1)resolved.push(root[required[i]]);root.ngperms=factory.apply({},resolved)}}(this,function(require,exports,module,angular){return function(){"use strict";angular.module("ngPerms",[])}(),function(){"use strict";angular.module("ngPerms").provider("PermissionService",function(){"ngInject";var provider=this,permissionGetters=[];provider.registerPermissionGetter=function(permissionGetterFn){-1===permissionGetters.indexOf(permissionGetterFn)&&permissionGetters.push(permissionGetterFn)},provider.unregisterPermissionGetter=function(permissionGetterFn){var getterIndex=permissionGetters.indexOf(permissionGetterFn);-1!==getterIndex&&permissionGetters.splice(getterIndex,1)},provider.$get=["$rootScope",function($rootScope){var self={},scopePrototype=Object.getPrototypeOf($rootScope),permMapping={};return self.define=function(name,perms){perms=angular.isArray(perms)?perms:[perms];var checkFn=function(args){for(var i=0;i<perms.length;i++){var perm=perms[i];if(angular.isFunction(perm)){if(!perm.apply(self,args))return!1}else{if(!angular.isString(perm))return!1;if(!self.has(perm))return!1}}return!0};return permMapping[name]=checkFn,self},self.has=function(name){var i,args=Array.prototype.slice.call(arguments,1);if(!permMapping.hasOwnProperty(name)){for(i=0;i<permissionGetters.length;i++)if(permissionGetters[i](name))return!0;return!1}return!!permMapping[name](args)},self.registerPermissionGetter=provider.registerPermissionGetter,self.unregisterPermissionGetter=provider.unregisterPermissionGetter,scopePrototype.perms={},scopePrototype.perms.has=self.has,self}]})}(),angular.module("ngPerms")});